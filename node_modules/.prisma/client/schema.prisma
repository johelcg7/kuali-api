// This is your Prisma schema file for Kuali Gesti√≥n
// Learn more about Prisma: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Companies {
  id              String      @id @default(uuid()) @map("id")
  name            String      @map("name")
  type            String      @map("type")
  phone           String?     @map("phone")
  country         String      @map("country")
  customer_number String?     @map("customer_number")
  leads           Leads[]
  users           Users[]
  templates       Templates[]
  events          Events[]
  createdAt       DateTime    @default(now()) @map("created_at")
  updatedAt       DateTime    @updatedAt @map("updated_at")

  @@map("companies")
}

model Leads {
  id             String       @id @default(uuid()) @map("id")
  name           String       @map("name")
  company        String?      @map("company")
  email          String       @map("email")
  phone          String?      @map("phone")
  age            Int?         @map("age")
  date_added     DateTime     @default(now()) @map("date_added")
  status         String       @map("status")
  next_step      String?      @map("next_step")
  company_id     String       @map("company_id")
  company_id_int Int?         @map("company_id_int")
  assigned_user  String?      @map("assigned_user")
  description    String?      @map("description")
  companies      Companies    @relation(fields: [company_id], references: [id])
  contactLogs    ContactLog[]
  events         Events[]
  createdAt      DateTime     @default(now()) @map("created_at")
  updatedAt      DateTime     @updatedAt @map("updated_at")

  @@map("leads")
}

model Users {
  id         String    @id @default(uuid()) @map("id")
  username   String    @unique @map("username")
  password   String    @map("password")
  role       String    @map("role")
  company_id String    @map("company_id")
  active_now Boolean   @default(true) @map("active_now")
  companies  Companies @relation(fields: [company_id], references: [id])
  createdAt  DateTime  @default(now()) @map("created_at")
  updatedAt  DateTime  @updatedAt @map("updated_at")

  @@map("users")
}

model ContactLog {
  id              String   @id @default(uuid()) @map("id")
  lead_id         String   @map("lead_id")
  type            String   @map("type")
  notes           String   @map("notes")
  contact_date    DateTime @default(now()) @map("contact_date")
  update_contents String?  @map("update_contents")
  requirements    String?  @map("requirements")
  leads           Leads    @relation(fields: [lead_id], references: [id])
  createdAt       DateTime @default(now()) @map("created_at")
  updatedAt       DateTime @updatedAt @map("updated_at")

  @@map("contact_log")
}

model Templates {
  id         String    @id @default(uuid()) @map("id")
  name       String    @map("name")
  body       String    @map("body")
  type       String    @map("type")
  createdAt  DateTime  @default(now()) @map("created_at")
  updatedAt  DateTime  @updatedAt @map("updated_at")
  company_id String    @map("company_id")
  scheduled  String?   @map("scheduled")
  active     Boolean   @default(true) @map("active")
  companies  Companies @relation(fields: [company_id], references: [id])

  @@map("templates")
}

model Events {
  id           String    @id @default(uuid()) @map("id")
  person_name  String    @map("person_name")
  title        String    @map("title")
  datetime     DateTime  @map("datetime")
  role         String    @map("role")
  outcome_note String?   @map("outcome_note")
  lead_id      String    @map("lead_id")
  company_id   String    @map("company_id")
  leads        Leads     @relation(fields: [lead_id], references: [id])
  companies    Companies @relation(fields: [company_id], references: [id])
  createdAt    DateTime  @default(now()) @map("created_at")
  updatedAt    DateTime  @updatedAt @map("updated_at")

  @@map("events")
}
